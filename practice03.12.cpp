//Обработка строк
#include <iostream>
//#include <string>
using namespace std;
int main()
{
	setlocale(LC_ALL, "Russian");
	char x_str[200];
//Ввод вывод строки
	cout << "Input x_str = ";
	cin.getline(x_str, 200);
	cout << "Output x_str = " << x_str << endl;
	char x_str2[] = "Sample string"; // 13 символов размер строки, выделяется под 14 символов т.к нуль вначале
	
	//strcat ( результирующая строка, исходная строка )
	//Функция присоединяет исходную строку к концу результирующей строки
	
	strcat_s(x_str, x_str2);
	cout << " Результат присоединения " << x_str << endl << endl;
	
	//int strcmp(строка1, строка2);
	//Функция сравнивает посимвольно две строки и возвращает целое число в соответствии с таблицей :
	
	if (strcmp(x_str2, x_str) != 0) cout << "Строки не равны" << endl << endl;
	else cout << "Строки  равны" << endl << endl;

	char x5[] = "привет";
	char x6[] = "солнце";

	if (strcmp(x5, x6) < 0) cout << "Строки не равны" << endl << endl;
	else cout << "x5 > x6" << endl << endl; // n больше чем с
	
	//  strcpy(результирующая строка, исходная строка)
	//  Функция копирует исходную строку в результирующую строку
	
	strcpy_s(x_str, x_str2);
	cout << " Результат копирования " << x_str << endl << endl;

	//ввод строки 
	char x_str3[20] = { 0 };
	cout << "повторный ввод строки " << endl;
	strcpy_s(x_str3, "string");
	cout << x_str3 << endl;

	//	strcspn(строка1, строка2)
	//	Функция ищет в строке1 символы, принадлежащие строке 2 и возвращает номер символа строки1, являющийся
	//  первым встретившимся символом строки2(нумерация начинается с 0) 
	// или длину строки1, если такого символа нет

	char x_sr3[] = "abcd123";  //инициализируем 3 строку
	char x_str4[] = "012345";  //инициализируем 4 строку
	int n;

	n = strcspn(x_str3, x_str4);
	cout << "The first number in str x3 = " << n + 1 << endl << endl;

	n = strcspn(x_str4, x_str2);
	cout << "The first number in str x4 =" << n << endl << endl;


	//	strlen(строка)
	//	Функция возвращает длину строки.

	cout << "Длина строки x3 =" << strlen(x_str3) << endl << endl;

	//	strchr(строка, символ)
	//	Функция возвращает указатель на первый встретившийся символ в строке или 
	//     NULL, если такого символа нет

	char* pch; //объявление указателя
	pch = strchr(x_str3, '2');

	cout << "символ '2' найден в " << pch - x_str3 + 1 << " позиции " << "строки " << x_str3 << endl;

		//   strstr(строка1, строка2)
		//   Функция возвращает указатель на первую встречаемость строки2 в строке1 или
		// NULL, если она не встретилась.

	pch = strstr(x_str3, "123");
	cout << "строка 123 встречается в строке " << x_str3 << " начиная с " << pch - x_str3 + 1 << " позиции " << endl;

	pch = strstr(x_str3, x_str2);
	if (pch != NULL)
		cout << "строка" << x_str2 << " встречается в строке " << x_str3 << " начиная   с " << pch - x_str3 + 1 << " позиции " << endl;
	else cout << "Строка " << x_str2 << " в строке " << x_str3 << " не встречается" << endl;

		//  strncat(результирующая строка, исходная строка, размер)
		//  Функция присоединяет к концу результирующей строки вторую строку (объединяет  
		// строки)
		//будет ошибка переполнения строки x_str3

	strncat_s(x_str3, x_str4, 3);
	cout << "Результат присоединения строки x3 и  строки x4" << x_str3 << endl;

		//нет ошибки

	strcat_s(x_str, x_str4);
	cout << "Результат присоединения строки " << x_str << " и  строки " << x_str3 << " = "
		<< x_str << endl << endl;

	return 0;

}
